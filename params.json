{
  "name": "Clogger",
  "tagline": "logging library for C",
  "body": "# clogger\r\n\r\n### logging library for c/c++\r\n\r\n[![Build Status](https://travis-ci.org/tibabit/clogger.svg?branch=master)](https://travis-ci.org/tibabit/clogger) ![License](https://img.shields.io/badge/license-MIT-blue.svg)\r\n\r\n### Features\r\n - File and console transports\r\n - Colorful logging on terminal\r\n - Supports multiple level of logging\r\n - Supports `printf` formatted log message\r\n - Easily customizable\r\n\r\n### Installation\r\n - clone the repository https://github.com/tibabit/clogger.git\r\n - Install cmake version >= 2.6\r\n - `cd /path/to/repository`\r\n - `mkdir bin`\r\n - `cd bin`\r\n - `cmake .. && make`\r\n\r\n### Examples\r\n\r\n - Console transport\r\n```C\r\n#include \"clogger.h\"\r\n\r\nint main()\r\n{\r\n    // initialize/create logger\r\n    clogger* logger = clogger_init();\r\n    // create a console transport\r\n    console_transport_t * console_transport = console_transport_new();\r\n    // set log level\r\n    console_transport_setopt(console_transport, TRANSPORT_OPT_SEVERITY, SEVERITY_DEBUG);\r\n    // add transport to logger\r\n    clogger_add_transport(logger, (transport_t *)console_transport);\r\n\r\n    clogger_emerg(logger, \"Emergency type log %s\", \"arg 1\");\r\n    clogger_alert(logger, \"Alert type log\");\r\n    clogger_crit(logger, \"Ciritcal type log\");\r\n    clogger_notice(logger, \"Notice type log\");\r\n    clogger_info(logger, \"Info type log %s\", \"arg 1\");\r\n    clogger_warn(logger, \"Warning type log\");\r\n    clogger_error(logger, \"Error type log\");\r\n    clogger_debug(logger, \"Debug type log\");\r\n\r\n    clogger_destroy(logger);\r\n}\r\n\r\n// Output\r\nemerg: Emergency type log arg 1\r\nalert: Alert type log\r\ncrit: Ciritcal type log\r\nnotice: Notice type log\r\ninfo: Info type log arg 1\r\nwarn: Warning type log\r\nerror: Error type log\r\ndebug: Debug type log\r\n```\r\n\r\n - File Transport\r\n ```C\r\n#include \"clogger.h\"\r\n\r\nint main()\r\n {\r\n    clogger* logger = clogger_init();\r\n\r\n    file_transport_t *file_transport = file_transport_new(\"test.log\");\r\n\r\n    clogger_add_transport(logger, (transport_t*)file_transport);\r\n\r\n    clogger_emerg(logger, \"Emergency type log %s\", \"arg 1\");\r\n    clogger_alert(logger, \"Alert type log\");\r\n    clogger_crit(logger, \"Ciritcal type log\");\r\n    clogger_notice(logger, \"Notice type log\");\r\n    clogger_info(logger, \"Info type log %s\", \"arg 1\");\r\n    clogger_warn(logger, \"Warning type log\");\r\n    clogger_error(logger, \"Error type log\");\r\n    clogger_debug(logger, \"Debug type log\");\r\n\r\n    clogger_destroy(logger);\r\n}\r\n\r\n// output\r\n2016-10-06T16:38:50Z - emerg: Emergency type log arg 1\r\n2016-10-06T16:38:50Z - alert: Alert type log\r\n2016-10-06T16:38:50Z - crit: Ciritcal type log\r\n2016-10-06T16:38:50Z - notice: Notice type log\r\n2016-10-06T16:38:50Z - info: Info type log arg 1\r\n2016-10-06T16:38:50Z - warn: Warning type log\r\n2016-10-06T16:38:50Z - error: Error type log\r\n ```\r\n\r\n### TODOs\r\n - configuration using config file\r\n - file rotation\r\n - unit tests\r\n - documentation\r\n - default logger\r\n - more examples\r\n - more customization\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}